name: Stockfish
on:
  push:
    branches:
      - Test_Actions1
jobs:
  Stockfish:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      COMPILER: ${{ matrix.config.compiler }}
      COMP: ${{ matrix.config.comp }}
      CXXFLAGS: 
    strategy:
      matrix:
        config:
          - {
              name: "Ubuntu 20.04 NDK armv8",
              os: ubuntu-20.04,
              compiler: aarch64-linux-android23-clang++,
              comp: ndk,
              run_armv8_tests: true,
              shell: 'bash {0}'
            }
          - {
              name: "Ubuntu 20.04 NDK armv7",
              os: ubuntu-20.04,
              compiler: armv7a-linux-androideabi21-clang++,
              comp: ndk,
              run_armv7_tests: true,
              shell: 'bash {0}'
            }

    defaults:
      run:
        working-directory: src
        shell: ${{ matrix.config.shell }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download required linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          #sudo apt install expect valgrind g++-multilib qemu-user qemu-user-static

      - name: Download the used network from the fishtest framework
        run: |
          make net

      #- name: Extract the bench number from the commit history
      #  run: |
      #    git log HEAD | grep "\b[Bb]ench[ :]\+[0-9]\{7\}" | head -n 1 | sed "s/[^0-9]*\([0-9]*\).*/\1/g" > git_sig
      #    [ -s git_sig ] && echo "benchref=$(cat git_sig)" >> $GITHUB_ENV && echo "Reference bench:" $(cat git_sig) || echo "No bench found"

      - name: Check compiler
        run: |
          export PATH=$PATH:$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin
          $COMPILER -v

      - name: Test help target
        run: |
          make help

      # Compile armv8 

      - name: Test armv8 build
        if: ${{ matrix.config.run_armv8_tests }}
        run: |
          function get_full_ndk_version {
            majorVersion=$1
            ndkFullVersion=$($SDKMANAGER --list | grep "ndk;${majorVersion}.*" | awk '{gsub("ndk;", ""); print $1}' | sort -V | tail -n1)
            echo "$ndkFullVersion"
          }
          ANDROID_ROOT=/usr/local/lib/android
          ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
          ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
          SDKMANAGER=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager
          ndkDefaultFullVersion=$(get_full_ndk_version "23")
          ln -sf $ANDROID_SDK_ROOT/ndk/$ndkDefaultFullVersion $ANDROID_NDK_ROOT
          export PATH=$ANDROID_NDK_HOME:$PATH
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export LDFLAGS="-static -Wno-unused-command-line-argument"

          cd ../jni
          cp Application_v8.mk Application.mk
          ndk-build
          cd ../libs/arm64-v8a
          cp Stockfish ../../src/stockfishv8
          cd ../../src/
      - uses: actions/upload-artifact@v3
        with:
          path: /home/runner/work/StockfishNPS/StockfishNPS/src/stockfishv8
          
      # Compile armv7 

      - name: Test armv7 build
        if: ${{ matrix.config.run_armv7_tests }}
        run: |
          function get_full_ndk_version {
            majorVersion=$1
            ndkFullVersion=$($SDKMANAGER --list | grep "ndk;${majorVersion}.*" | awk '{gsub("ndk;", ""); print $1}' | sort -V | tail -n1)
            echo "$ndkFullVersion"
          }
          ANDROID_ROOT=/usr/local/lib/android
          ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
          ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
          SDKMANAGER=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager
          ndkDefaultFullVersion=$(get_full_ndk_version "23")
          ln -sf $ANDROID_SDK_ROOT/ndk/$ndkDefaultFullVersion $ANDROID_NDK_ROOT
          export PATH=$ANDROID_NDK_HOME:$PATH
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export LDFLAGS="-static -Wno-unused-command-line-argument"
    
          cd ../jni
          cp Application_v7.mk Application.mk
          ndk-build
          cd ../libs/armeabi-v7a
          cp Stockfish ../../src/stockfishv7
          cd ../../src/
      - uses: actions/upload-artifact@v3
        with:
          path: /home/runner/work/StockfishNPS/StockfishNPS/src/stockfishv7
